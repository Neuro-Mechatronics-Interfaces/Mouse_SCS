function [fig, ax, yEdges, yLab, xEdges_n, xLab_n, xEdges_p, xLab_p, cdata] = init_somatotopy_fig(options)

arguments
    options.SomatotopyFigureFile = 'Somatotopy-DRGS_Template_Mouse.png';
    options.SomatotopicOutputPositive (1,:) string = ["R-PARA", "R-WEXT", "R-BIC", "R-TRI", "R-P-DELT"];
    options.SomatotopicOutputNegative (1,:) string = ["L-P-DELT", "L-TRI", "L-BIC", "L-WEXT", "L-PARA"];
    options.Segments = ["C2", "C3", "C4", "C5", "C6", "C7", "T1", "T2"];
    options.LabelWidth = 90;
    options.BorderWidth = 10;
    options.LabelYGridExtent = [30, 650];
    options.Width = 1400;
    options.Height = 950;
    options.Title = "";
    options.Subtitle = "";
end

% A = imread(options.SomatotopyFigureFile);
r = groot;
if size(r.MonitorPositions,1) > 1
    pos = [r.MonitorPositions(2,1)+120, r.MonitorPositions(2,2)+150, options.Width+40 options.Height];
else
    pos = [120 150 options.Width+40 options.Height];
end
fig = figure(...
    'Name', 'DRGS Somatotopy', ...
    'Color','w',...
    'Units','pixels',...
    'Position', pos);
ax = axes(fig, ...
    'NextPlot','add', ...
    'XLim',[-options.Width/2, options.Width/2], ...
    'YLim',[0, options.Height-1], ...
    'Clipping', 'off', ...
    'Color','none',...
    'XColor','none',...
    'YColor','none',...
    'YDir', 'reverse');
% image(ax, [0, options.Width-1], [0, options.Height-1], A);
lw = options.LabelWidth/2;
verts = [[-lw; lw; lw; -lw],[0; 0; options.Height; options.Height]];
patch(ax, 'Faces', [1:4, 1], 'Vertices', verts, 'FaceColor', 'k', 'EdgeColor', 'none');
text(ax, 0, options.Height-options.BorderWidth, 'Vertebrae', ...
    'Rotation', 90, ...
    'FontName', 'Tahoma', ...
    'FontSize', 32, 'Color', 'k', ...
    'BackgroundColor', validatecolor('#e8dcd2'));
text(ax, 0, options.LabelYGridExtent(2)-options.BorderWidth, ...
    'T2', 'FontSize', 32, 'Color', 'k', ...
    'BackgroundColor', validatecolor('#e8dcd2'), ...
    'HorizontalAlignment', 'center');
text(ax, 0, options.BorderWidth + options.LabelYGridExtent(1), ...
    'C2', 'FontSize', 32, 'Color', 'k', ...
    'BackgroundColor', validatecolor('#e8dcd2'), ...
    'HorizontalAlignment', 'center');
yEdges = round(linspace(options.LabelYGridExtent(1), options.LabelYGridExtent(2), numel(options.Segments)+1));
yLab = options.Segments;
for ii = 1:numel(yEdges)
    h = line(ax, [options.LabelWidth/2, options.Width/2], ones(1,2).*yEdges(ii), 'Color', [0 0 0], ...
        'HitTest','off', 'LineStyle', '--', 'LineWidth', 1.5);
    h.Annotation.LegendInformation.IconDisplayStyle = 'off';
    h = line(ax, [-options.LabelWidth/2, -options.Width/2], ones(1,2).*yEdges(ii), 'Color', [0 0 0], ...
        'HitTest','off', 'LineStyle', '--', 'LineWidth', 1.5);
    h.Annotation.LegendInformation.IconDisplayStyle = 'off';
end
xEdges_n = round(linspace(-options.Width/2+2, -options.LabelWidth/2, numel(options.SomatotopicOutputNegative)+1));
xLab_n = options.SomatotopicOutputNegative;
cdata = cm.map("tartan",'DataType',"double",'N',numel([options.SomatotopicOutputNegative; options.SomatotopicOutputPositive]));
for ii = 2:numel(xEdges_n)
    h = xline(ax, xEdges_n(ii), 'Color', [0 0 0], 'LineStyle', ':', 'LineWidth', 1, ...
        'Label', sprintf('\\color[rgb]{%.2f,%.2f,%.2f}%s',cdata(ii-1,:),xLab_n(ii-1)), ...
        'LabelOrientation', 'aligned', ...
        'LabelVerticalAlignment','bottom','LabelHorizontalAlignment','left', ...
        'FontSize', 32, 'FontName', 'Tahoma', 'FontWeight','bold', ...
        'HitTest','off');
    h.Annotation.LegendInformation.IconDisplayStyle = 'off';
end

xEdges_p = round(linspace(options.LabelWidth/2, options.Width/2-2, numel(options.SomatotopicOutputPositive)+1));
xLab_p = options.SomatotopicOutputPositive;
for ii = 2:numel(xEdges_p)
    h = xline(ax, xEdges_p(ii), 'Color', [0 0 0], 'LineStyle', ':', 'LineWidth', 1, ...
        'Label', sprintf('\\color[rgb]{%.2f,%.2f,%.2f}%s',cdata(ii-1 + numel(options.SomatotopicOutputNegative),:),xLab_p(ii-1)), ...
        'LabelOrientation', 'aligned', ...
        'LabelVerticalAlignment','bottom','LabelHorizontalAlignment','left', ...
        'FontSize', 32, 'FontName', 'Tahoma', 'FontWeight','bold', ...
        'HitTest','off');
    h.Annotation.LegendInformation.IconDisplayStyle = 'off';
end
plot.add_titles(ax, options.Title, options.Subtitle);

end