function sweep_data = example_load_plot_export_m2_simulations(W, SweepName, options)
%EXAMPLE_LOAD_PLOT_EXPORT_M2_SIMULATIONS  Shows how to load/plot/export the NEURON simulations

arguments
    W (:,3) = [30, 30, 30; 50 30 10; 20 50 20; 10 30 50];
    SweepName (1,:) string = ["Constant", "Decreasing", "Up-Down", "Increasing" , ...
                              "Constant (20% blending)", "Decreasing (20% blending)", "Up-Down (20% blending)", "Increasing (20% blending)", ...
                              "Constant (50% blending)", "Decreasing (50% blending)", "Up-Down (50% blending)", "Increasing (50% blending)"];
    options.CloseExisting (1,1) logical = true;
    options.ClearCommandWindow (1,1) logical = true;
    options.SaveFolder {mustBeTextScalar} = 'export/NEURON';
    options.DeckName {mustBeTextScalar} = 'FF-Modulation';
    options.PulseType (1,3) {mustBeMember(options.PulseType, {'b-.', 'r--'})} = {'b-.', 'b-.', 'r--'}; % Blue for IPSP; Red for EPSP
end

% if size(W,1) < numel(SweepName)
%     error("Not enough qualitative labels in SweepName for each combination (row) of weights (W)!");
% end

if options.CloseExisting
    close all force;
end
if options.ClearCommandWindow
    clc;
end

% % % Powerpoint Deck exporter % % %
pptx = exportToPPTX('', ...
    'Dimensions',[10, 7.5], ...
    'Title','M2-Modulation MOTONEURON Simulations', ...
    'Author','Max Murphy (MATLAB Auto-gen)', ...
    'Subject','M2-Modulation MOTONEURON Simulations', ...
    'Comments','Frequency-vs-Rate sweeps for pre- vs post-synaptic APs under different modulation conditions.');
pptx.addSlide();
pptx.addTextbox('M2-Modulation (NEURON Simulated)', ...
        'Position',[0 3.5 10 1.5], ...
        'FontName', 'Tahoma', ...
        'HorizontalAlignment', 'center', ...
        'FontSize', 36);
sweep_data = [];
[~,deck_name,~] = fileparts(options.DeckName);

for ii = 1:size(W,1)
    % 1. Load simulation data for "constant" sweep (all 3 pulses in sets of 3 stimuli have same weight)
    % (Assumes you've: 
    %   1. Installed NEURON simulator
    %   2. From `~/NEURON/MotorNeuron`, in a terminal run `mknrndll`
    %   3. From `~/NEURON/MotorNeuron`, in a terminal run `nrniv main.hoc`
    %   4. Waited until the NEURON GUI goes away (i.e. it's done simulating)
    % )
    %
    % SEE ALSO: run_neuron_simulation('main_m2_freq_sweep.hoc');
    %				|
    %				|-> Runs the NEURON simulation sweep from MATLAB!
    W1 = W(ii,1);
    W2 = W(ii,2);
    W3 = W(ii,3);
    simdata = load_simulated_data(W1, W2, W3);

    % 2. Plot figures.
    [fig, tmp] = plot_simulations(simdata, 'PulseType', options.PulseType);
    sweep_data = [sweep_data; tmp]; %#ok<AGROW>

    % 3. Create sweep "section-header" slide.
    slideId = pptx.addSlide();
    pptx.addTextbox(sprintf('W1 = %5.2f | W2 = %5.2f | W3 = %5.2f',W1,W2,W3), ...
            'Position',[0 3.5 10 1.5], ...
            'FontName', 'Tahoma', ...
            'HorizontalAlignment', 'center', ...
            'FontSize', 36);
    pptx.addTextbox(sprintf('"%s" Sweep', SweepName(ii)), ...
        'Position',[0 5 10 1], ...
        'HorizontalAlignment', 'center', ...
        'FontSize', 16);
    pptx.addTextbox(num2str(slideId), ...
                'Position',[9.5 7 0.5 0.5], ...
                'VerticalAlignment','bottom', ...
                'HorizontalAlignment','right', ...
                'FontSize', 10);


    % 4. Iterate over figures, saving to Powerpoint.
    for iFig = 1:numel(fig)
        slideId = pptx.addSlide();
        pptx.addTextbox(num2str(slideId), ...
                'Position',[9.5 7 0.5 0.5], ...
                'VerticalAlignment','bottom', ...
                'HorizontalAlignment','right', ...
                'FontSize', 10, ...
                'FontName', 'Consolas');
        pptx.addTextbox('Black = membrane voltage at soma', ...
                'Position',[0 6.5 4.5 0.5], ...
                'VerticalAlignment','middle', ...
                'HorizontalAlignment','left', ...
                'FontName', 'Tahoma', ...
                'FontWeight','bold', ...
                'Color', [0 0 0], ...
                'FontSize', 10);
        pptx.addTextbox('Blue = synaptic IPSP onset (stimuli)', ...
                'Position',[0 7.0 4.5 0.5], ...
                'VerticalAlignment','middle', ...
                'HorizontalAlignment','left', ...
                'FontName', 'Tahoma', ...
                'FontWeight', 'bold', ...
                'Color', [0 0 1], ...
                'FontSize', 10);
        pptx.addTextbox('Red = synaptic EPSP onset (stimuli)', ...
                'Position',[0 6.75 4.5 0.5], ...
                'VerticalAlignment','middle', ...
                'HorizontalAlignment','left', ...
                'FontName', 'Tahoma', ...
                'FontWeight', 'bold', ...
                'Color', [1 0 0], ...
                'FontSize', 10);
        pptx.addTextbox(sprintf('"%s" Sweep', SweepName(ii)), ...
                'Position',[5.0 6.5 2.5 1.0], ...
                'VerticalAlignment','middle', ...
                'HorizontalAlignment','center', ...
                'FontName', 'Tahoma', ...
                'FontAngle','italic', ...
                'Color', [0.65 0.65 0.65], ...
                'FontSize', 10);
        pptx.addPicture(fig(iFig),'Position',[0.5 0 9 6.5]);
        utils.save_figure(fig(iFig),sprintf('%s/%s',options.SaveFolder,deck_name), ...
            sprintf("Recruitment_Vsoma_%ggl_%gm2_%gblending_%s",fig(iFig).UserData.Leak, fig(iFig).UserData.M2_Level, fig(iFig).UserData.Blending_Level, SweepName(ii)), ...
            'ExportAs', {'.png', '.svg'}, 'SaveFigure', true);
    end
end

% 5. Plot the collected sweep pre- vs post-synaptic frequency curves
fig = plot_simulation_sweeps(sweep_data, 'SubSweepOrder', SweepName);
slideId = pptx.addSlide();
pptx.addTextbox(num2str(slideId), ...
            'Position',[9.5 7 0.5 0.5], ...
            'VerticalAlignment','bottom', ...
            'HorizontalAlignment','right', ...
            'FontSize', 10);
pptx.addPicture(fig,...
    'Position',[0 0 10 6]);
utils.save_figure(fig, options.SaveFolder, sprintf('%s_Pre-vs-Post_Synaptic_Frequency_Curves', deck_name));

% 6. Save Powerpoint slide deck for viewing figures.
pptx.save(fullfile(options.SaveFolder, deck_name));

end